#
# Copyright 2020 Blockie AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

@clone: string

_dep_install:
    _info:
        title: Check dependencies for this module.
    _env:
        - RUN: TEXT_DEP_INSTALL

_info:
    title: Text module
    desc: |
        Handles text file preprocessing.

extractvariables:
    _info:
        title: Extract all variable names from a text
    _env:
        - text:
            title: Text contents
        - RUN: TEXT_EXTRACT_VARIABLES -- "${text}"

getenv:
    _info:
        title: For a list of extracted variables get their values in the current env
    _env:
        - variables:
            title: List of variable names
        - failonerror:
            title: Toggle failure on error when an environment variable is undefined
            value: ${failonerror:-1}
        - RUN: TEXT_GET_ENV -- "${variables}" "${failonerror}"

variablesubst:
    _info:
        title: Substitute variables in text for their given values
    _env:
        - text:
            title: Text contents
        - variables:
            title: List of variable names
        - values:
            title: list of varname=value rows
        - RUN: TEXT_VARIABLE_SUBST -- "${text}" "${variables}" "${values}"

filter:
    _info:
        title: Filter text content on STDIN on #ifdef, #ifndef
        desc: |
            Parses and filters away on #ifdef, #ifndef
    _env:
        - RUN: TEXT_FILTER

preprocess:
    _info:
        title: Variable substitute and filter text on STDIN
        desc: |
            Does variable substitution using variables in environment,
            then parses and filters away on #ifdef, #ifndef
    _env:
        - RUN: TEXT_PREPROCESS
